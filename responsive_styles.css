/* 
    These responsive styles are designed to demonstrate how a single CSS file can be used to alter
    the display of information on a page viewed under multiple browser contexts.
    
    @author Richard White
    @version 2015-07-04   
*/

body    {
            margin: 0; 
            border: 0; 
            padding: 0; 
            background: #fff;
            font-family: Georgia, Times, serif;
        }
#header { 
            margin: 0; 
            border: 0; 
            padding: 1em; 
            background: #036; 
            color: #fff;
            text-align: center; 
            overflow: auto; 
        }

#header h1  {
                margin: 0;
                padding: 0;
            }

/*
    The default vertmenu is displayed on mobile devices when the user clicks on
    the hamburger labelled "Menu", causes the vertmenu list to be displayed in
    the viewport. This vertmenu is hidden in the desktop-dimensioned browswer
    window as described below.
*/
#vertmenu   { 
                margin: 0; 
                border: 0; 
                padding: 0; 
                width: 100%; 
                display: block; 
                clear: both; 
                font-family: Verdana, Helvetica, Arial, sans-serif;  
                font-weight: bold; 
                font-size: 80%;  
            }
#hamburger  {
                margin: 0;
                border: 0;
                padding: 0; 
                font-size: 150%;
            }
#vertmenu ul 
            { 
                margin: 0; 
                border: 0; 
                padding: 0; 
                width: 100%; 
            }
#vertmenu li    {
                margin: 0; 
                border-style: solid; 
                border-width: 1px 0 0 0; 
                border-color: #fff; 
                padding: 0; 
                width: 100%; 
                display: block; 
                text-align: center; 
                list-style-type: none; 
                }
#vertmenu li#here
            {
                padding: 10px 0;
                color: #ccc;
            }
#vertmenu a:link, #vertmenu a:visited  /* for the Menu/hamburger icon */
            {
                margin: 0; 
                border: 0; 
                padding: 10px 0; 
                display: block; 
                text-decoration: none; 
                color: #fff;
            }
#vertmenu li a:link, #vertmenu li a:visited 
            { 
                color: #333;
                background: #ddd;  
            }
#vertmenu li a:hover, #vertmenu a:active 
            {
                background: #666; 
                color: #ccc; 
            }


#horzmenu   { 
                margin: 0; 
                border: 0; 
                padding: 0; 
                background: #ccc; 
                overflow: hidden; 
                font-family: Verdana, Helvetica, Arial, sans-serif; 
                font-weight: bold;
                display: none; 
            }            
#horzmenu ul    {
                    margin: 0 auto; 
                    border: 0; 
                    padding: 0; 
                    list-style-type: none; 
                    text-align: center; 
                    width: 25em; 
                }
#horzmenu li    {  
                    margin: 0 auto; 
                    border: 0; 
                    padding: 0; 
                    float: left;
                }
#horzmenu li#here
                {
                    padding: 0.5em 1em;
                    color: #000;
                }
#horzmenu a:link, #horzmenu a:visited 
                { 
                    margin: 0; 
                    border: 0; 
                    padding: 0.5em 1em; 
                    display: block; 
                    color: #666; 
                    text-decoration: none; 
                }
#horzmenu a:hover, #horzmenu a:active 
                { 
                    color: #000; 
                }


/* 
    The container class is used to limit the width of the content on the page to a maximum of
    of 900px: white space is added to either side for browser windows that are wider than that.
*/
.container 
            {
                margin: auto; 
                border: 0;
                padding: 0 1em;
                max-width: 900px; /* Padding will be added to sides as necessary */
            } 

#contentwrapper 
            { 
                overflow: auto; 
            }
/* 
    Default content1 and content2 are for a mobile device, taking up the full 
    width of the screen. We'll alter these values in the wide-screen media
    query below.
*/
#content1, #content2
            {   margin: 0; 
                border: 0; 
                padding: 0; 
                float: left; 
                width: 100%;  
            }                     


#footer     { 
                margin: 0; 
                border: 0; 
                padding: 0 1em; 
                background: #036; 
                color: #fff; 
                text-align: center; 
                overflow: auto; 
            }
#footer a:link, #footer a:visited 
            {
                color: #fff;
            }

.mobile_hide  /* Used to supress the display of elements in the mobile version */
            {
                display: none;
            }


/*
    These specification below are the ones with trigger alterations in display based on broswer width.
    The defaults CSS-descriptions above are based on an assumed mobile, "vertically-prominent" display.
    
    This specification, then, describes how to alter those default display values for a wider (>= 600px)
    display port.
*/
            
/* desktop display, for large-width desktop-sized display, all the way down to 600px wide*/
@media (min-width: 600px) { 
    #vertmenu { display: none; }                /* removes vertical (mobile-version) menu */
    #horzmenu { display: block; }               /* leaves horizontal menu in place */
    #content1 { padding: 0 3% 0 0; width: 47%; } /* places two content containers side by side */
    #content2 { padding: 0 0 3% 0; width: 47%; }
    .mobile_hide { display: block; }            /* Allows the display of elements otherwise suppressed */
}
            